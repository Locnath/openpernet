/* soapWebServiceBindingProxy.h
   Generated by gSOAP 2.7.13 from webservice.h
   Copyright(C) 2000-2009, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef soapWebServiceBindingProxy_H
#define soapWebServiceBindingProxy_H
#include "soapH.h"
class WebServiceBinding
{   public:
	/// Runtime engine context allocated in constructor
	struct soap *soap;
	/// Endpoint URL of service 'WebServiceBinding' (change as needed)
	const char *endpoint;
	/// Constructor allocates soap engine context, sets default endpoint URL, and sets namespace mapping table
	WebServiceBinding()
	{ soap = soap_new(); endpoint = "http://v.starv.tv/webservice.php"; if (soap && !soap->namespaces) { static const struct Namespace namespaces[] = 
{
	{"SOAP-ENV", "http://schemas.xmlsoap.org/soap/envelope/", "http://www.w3.org/*/soap-envelope", NULL},
	{"SOAP-ENC", "http://schemas.xmlsoap.org/soap/encoding/", "http://www.w3.org/*/soap-encoding", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"ns1", "urn:webservice", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap->namespaces = namespaces; } };
	/// Destructor frees deserialized data and soap engine context
	virtual ~WebServiceBinding() { if (soap) { soap_destroy(soap); soap_end(soap); soap_free(soap); } };
	/// Invoke 'AddDevice' of service 'WebServiceBinding' and return error code (or SOAP_OK)
	virtual int ns1__AddDevice(std::string UserName, std::string Password, std::string Mac, std::string MacCheck, std::string Title, std::string Des, std::string USIMNo, std::string &AddDeviceReturn) { return soap ? soap_call_ns1__AddDevice(soap, endpoint, NULL, UserName, Password, Mac, MacCheck, Title, Des, USIMNo, AddDeviceReturn) : SOAP_EOM; };
	/// Invoke 'CamTree' of service 'WebServiceBinding' and return error code (or SOAP_OK)
	virtual int ns1__CamTree(std::string UserName, std::string Password, std::string &CamTreeReturn) { return soap ? soap_call_ns1__CamTree(soap, endpoint, NULL, UserName, Password, CamTreeReturn) : SOAP_EOM; };
	/// Invoke 'CheckUser' of service 'WebServiceBinding' and return error code (or SOAP_OK)
	virtual int ns1__CheckUser(std::string Account, std::string Password, std::string &CheckUserReturn) { return soap ? soap_call_ns1__CheckUser(soap, endpoint, NULL, Account, Password, CheckUserReturn) : SOAP_EOM; };
	/// Invoke 'DelDevice' of service 'WebServiceBinding' and return error code (or SOAP_OK)
	virtual int ns1__DelDevice(std::string UserName, std::string Password, std::string Mac, std::string &DelDeviceReturn) { return soap ? soap_call_ns1__DelDevice(soap, endpoint, NULL, UserName, Password, Mac, DelDeviceReturn) : SOAP_EOM; };
	/// Invoke 'DevicePTZ' of service 'WebServiceBinding' and return error code (or SOAP_OK)
	virtual int ns1__DevicePTZ(std::string UserName, std::string Password, std::string Mac, std::string Sn, std::string Camera, std::string Action, std::string Speed, std::string Stop, std::string &DevicePTZReturn) { return soap ? soap_call_ns1__DevicePTZ(soap, endpoint, NULL, UserName, Password, Mac, Sn, Camera, Action, Speed, Stop, DevicePTZReturn) : SOAP_EOM; };
	/// Invoke 'DmURL' of service 'WebServiceBinding' and return error code (or SOAP_OK)
	virtual int ns1__DmURL(std::string UserName, std::string Password, std::string Mac, std::string &DmURLReturn) { return soap ? soap_call_ns1__DmURL(soap, endpoint, NULL, UserName, Password, Mac, DmURLReturn) : SOAP_EOM; };
	/// Invoke 'EditUserInfo' of service 'WebServiceBinding' and return error code (or SOAP_OK)
	virtual int ns1__EditUserInfo(std::string UserName, std::string Password, xsd__anyType *NewInfo, std::string &EditUserInfoReturn) { return soap ? soap_call_ns1__EditUserInfo(soap, endpoint, NULL, UserName, Password, NewInfo, EditUserInfoReturn) : SOAP_EOM; };
	/// Invoke 'GetFtpUploadTime' of service 'WebServiceBinding' and return error code (or SOAP_OK)
	virtual int ns1__GetFtpUploadTime(std::string UserName, std::string Password, std::string Mac, std::string Sn, std::string &GetFtpUploadTimeReturn) { return soap ? soap_call_ns1__GetFtpUploadTime(soap, endpoint, NULL, UserName, Password, Mac, Sn, GetFtpUploadTimeReturn) : SOAP_EOM; };
	/// Invoke 'GetMyIP' of service 'WebServiceBinding' and return error code (or SOAP_OK)
	virtual int ns1__GetMyIP(std::string &GetMyIPReturn) { return soap ? soap_call_ns1__GetMyIP(soap, endpoint, NULL, GetMyIPReturn) : SOAP_EOM; };
	/// Invoke 'GetRecordTime' of service 'WebServiceBinding' and return error code (or SOAP_OK)
	virtual int ns1__GetRecordTime(std::string UserName, std::string Password, std::string Mac, std::string Sn, std::string &GetRecordTimeReturn) { return soap ? soap_call_ns1__GetRecordTime(soap, endpoint, NULL, UserName, Password, Mac, Sn, GetRecordTimeReturn) : SOAP_EOM; };
	/// Invoke 'GetRecUrlList' of service 'WebServiceBinding' and return error code (or SOAP_OK)
	virtual int ns1__GetRecUrlList(std::string UserName, std::string Password, std::string Mac, std::string Sn, std::string RootPath, std::string RecServer, std::string StartTime, std::string StopTime, std::string &GetRecUrlListReturn) { return soap ? soap_call_ns1__GetRecUrlList(soap, endpoint, NULL, UserName, Password, Mac, Sn, RootPath, RecServer, StartTime, StopTime, GetRecUrlListReturn) : SOAP_EOM; };
	/// Invoke 'GetUserDetailInfo' of service 'WebServiceBinding' and return error code (or SOAP_OK)
	virtual int ns1__GetUserDetailInfo(std::string UserName, std::string Password, std::string &GetUserDetailInfoReturn) { return soap ? soap_call_ns1__GetUserDetailInfo(soap, endpoint, NULL, UserName, Password, GetUserDetailInfoReturn) : SOAP_EOM; };
	/// Invoke 'ListAlarm' of service 'WebServiceBinding' and return error code (or SOAP_OK)
	virtual int ns1__ListAlarm(std::string UserName, std::string Password, std::string PageSize, std::string PageIndex, std::string TimeBegin, std::string Mac, std::string Sn, std::string AlarmType, std::string Channel, std::string Confirm, std::string &ListAlarmReturn) { return soap ? soap_call_ns1__ListAlarm(soap, endpoint, NULL, UserName, Password, PageSize, PageIndex, TimeBegin, Mac, Sn, AlarmType, Channel, Confirm, ListAlarmReturn) : SOAP_EOM; };
	/// Invoke 'ListApplication' of service 'WebServiceBinding' and return error code (or SOAP_OK)
	virtual int ns1__ListApplication(std::string UserName, std::string Password, std::string PageSize, std::string PageIndex, std::string Name, std::string &ListApplicationReturn) { return soap ? soap_call_ns1__ListApplication(soap, endpoint, NULL, UserName, Password, PageSize, PageIndex, Name, ListApplicationReturn) : SOAP_EOM; };
	/// Invoke 'ListDevCameras' of service 'WebServiceBinding' and return error code (or SOAP_OK)
	virtual int ns1__ListDevCameras(std::string UserName, std::string Password, std::string MAC, std::string CamId, std::string &ListDevCamerasReturn) { return soap ? soap_call_ns1__ListDevCameras(soap, endpoint, NULL, UserName, Password, MAC, CamId, ListDevCamerasReturn) : SOAP_EOM; };
	/// Invoke 'ListDevice' of service 'WebServiceBinding' and return error code (or SOAP_OK)
	virtual int ns1__ListDevice(std::string UserName, std::string Password, std::string PageSize, std::string PageIndex, std::string Application, std::string Online, std::string QueryDistrict, std::string QueryDistrictIDs, std::string QueryTitle, std::string QueryMAC, std::string &ListDeviceReturn) { return soap ? soap_call_ns1__ListDevice(soap, endpoint, NULL, UserName, Password, PageSize, PageIndex, Application, Online, QueryDistrict, QueryDistrictIDs, QueryTitle, QueryMAC, ListDeviceReturn) : SOAP_EOM; };
	/// Invoke 'McURL' of service 'WebServiceBinding' and return error code (or SOAP_OK)
	virtual int ns1__McURL(std::string UserName, std::string Password, std::string &McURLReturn) { return soap ? soap_call_ns1__McURL(soap, endpoint, NULL, UserName, Password, McURLReturn) : SOAP_EOM; };
	/// Invoke 'RecordUrl' of service 'WebServiceBinding' and return error code (or SOAP_OK)
	virtual int ns1__RecordUrl(std::string UserName, std::string Password, std::string Mac, std::string Sn, std::string Channel, std::string &RecordUrlReturn) { return soap ? soap_call_ns1__RecordUrl(soap, endpoint, NULL, UserName, Password, Mac, Sn, Channel, RecordUrlReturn) : SOAP_EOM; };
	/// Invoke 'RegisterUser' of service 'WebServiceBinding' and return error code (or SOAP_OK)
	virtual int ns1__RegisterUser(std::string FullName, std::string Mobile, std::string Sex, std::string Password, std::string Career, std::string Email, std::string Province, std::string City, std::string Birthday, std::string Company, std::string &RegisterUserReturn) { return soap ? soap_call_ns1__RegisterUser(soap, endpoint, NULL, FullName, Mobile, Sex, Password, Career, Email, Province, City, Birthday, Company, RegisterUserReturn) : SOAP_EOM; };
	/// Invoke 'ResetPassword' of service 'WebServiceBinding' and return error code (or SOAP_OK)
	virtual int ns1__ResetPassword(std::string UserName, std::string OldPassword, std::string NewPassword, std::string &ResetPasswordReturn) { return soap ? soap_call_ns1__ResetPassword(soap, endpoint, NULL, UserName, OldPassword, NewPassword, ResetPasswordReturn) : SOAP_EOM; };
	/// Invoke 'SetAlarm' of service 'WebServiceBinding' and return error code (or SOAP_OK)
	virtual int ns1__SetAlarm(std::string UserName, std::string Password, std::string Mac, std::string Sn, std::string Arm, std::string &SetAlarmReturn) { return soap ? soap_call_ns1__SetAlarm(soap, endpoint, NULL, UserName, Password, Mac, Sn, Arm, SetAlarmReturn) : SOAP_EOM; };
	/// Invoke 'SetCameraName' of service 'WebServiceBinding' and return error code (or SOAP_OK)
	virtual int ns1__SetCameraName(std::string UserName, std::string Password, std::string Mac, std::string Sn, std::string Channel, std::string Name, std::string &SetCameraNameReturn) { return soap ? soap_call_ns1__SetCameraName(soap, endpoint, NULL, UserName, Password, Mac, Sn, Channel, Name, SetCameraNameReturn) : SOAP_EOM; };
	/// Invoke 'SetDevActiveStatus' of service 'WebServiceBinding' and return error code (or SOAP_OK)
	virtual int ns1__SetDevActiveStatus(std::string Mac, std::string UserName, std::string Password, std::string NewActiveStatus, std::string &SetDevActiveStatusReturn) { return soap ? soap_call_ns1__SetDevActiveStatus(soap, endpoint, NULL, Mac, UserName, Password, NewActiveStatus, SetDevActiveStatusReturn) : SOAP_EOM; };
	/// Invoke 'SetDeviceName' of service 'WebServiceBinding' and return error code (or SOAP_OK)
	virtual int ns1__SetDeviceName(std::string UserName, std::string Password, std::string Mac, std::string Sn, std::string Name, std::string &SetDeviceNameReturn) { return soap ? soap_call_ns1__SetDeviceName(soap, endpoint, NULL, UserName, Password, Mac, Sn, Name, SetDeviceNameReturn) : SOAP_EOM; };
	/// Invoke 'SetFtpUploadTime' of service 'WebServiceBinding' and return error code (or SOAP_OK)
	virtual int ns1__SetFtpUploadTime(std::string UserName, std::string Password, std::string Mac, std::string Sn, std::string StartTime, std::string StopTime, std::string &SetFtpUploadTimeReturn) { return soap ? soap_call_ns1__SetFtpUploadTime(soap, endpoint, NULL, UserName, Password, Mac, Sn, StartTime, StopTime, SetFtpUploadTimeReturn) : SOAP_EOM; };
	/// Invoke 'SetRecordTime' of service 'WebServiceBinding' and return error code (or SOAP_OK)
	virtual int ns1__SetRecordTime(std::string UserName, std::string Password, std::string Mac, std::string Sn, std::string StartTime, std::string StopTime, std::string &SetRecordTimeReturn) { return soap ? soap_call_ns1__SetRecordTime(soap, endpoint, NULL, UserName, Password, Mac, Sn, StartTime, StopTime, SetRecordTimeReturn) : SOAP_EOM; };
};
#endif
